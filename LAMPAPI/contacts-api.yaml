swagger: '2.0'
info:
  description: This is the API document for the COP 4331 Contacts app
  version: 1.0.0
  title: Contacts app
  # Nicholas Borzilleri(enter contact info)
  # Daniel Gomez (enter contact info)
  # Dylan Money (enter contact info)
  contact:
    email: ni792013@ucf.edu
    
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

host: 137.184.185.65 #change to whatever out url/domain name is
basePath: /LAMPAPI
schemes:
- http
consumes:
  - application/json
produces:
  - application/json


paths:
  /Login.php:
    post:
      tags:
      - Users
      summary: Logs in and returns user info
      operationId: doLogin
      description: Expects plain password; backend hashes with MD5 to compare 
      parameters:
      - in: body
        name: loginItem
        required: true
        description: Login
        schema:
          $ref: '#/definitions/Login'
          
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/LoginResponse'
        400:
          description: Missing login or password
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Invalid credentials
          schema: 
            $ref: '#/definitions/Error'
        500:
          description: Server/DB error
          schema:
            $ref: '#/definitions/Error'
        
  /AddContact.php:
    post:
      tags:
      - Contacts
      summary: Adds a contact
      operationId: addContact
      description: Adds a contact to the contact app database
      parameters:
      - in: body
        name: contactItem
        required: true
        description: Contact
        schema:
          $ref: '#/definitions/ContactAddRequest'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/ContactAddResponse'
        400:
          description: Validation error (missing fields)
          schema:
           $ref: '#/definitions/Error'
        500:
          description: Server/DB error
          schema:
            $ref: '#/definitions/Error'
  /SearchContacts.php:
    post:
      tags:
      - Contacts
      summary: Searches contact list
      operationId: searchContacts
      description: Searches contact from the contacts database
      parameters:
      - in: body
        name: search
        required: true
        description: Contact Search
        schema:
          $ref: '#/definitions/Search'
      responses:
        200:
          description: Results (possibly empty)
          schema:
            $ref: '#/definitions/SearchResponse'
        400:
          description: Validation error (missing userId)
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server/DB error
          schema:
            $ref: '#/definitions/Error'
  /CreateUsers.php:
    post:
      tags:
      - Create
      summary: Creates a user
      operationId: createUser
      description: Creates a user to login with
      parameters:
      - in: body
        name: createItem
        description: Create User
        required: true
        schema:
          $ref: '#/definitions/Create'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/UserCreatedResponse'
        400:
          description: Validation error (missing fields)
          schema:
            $ref: '#/definitions/Error'
        409:
          description: Username already exists
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server/DB error
          schema:
            $ref: '#/definitions/Error'
  /ModifyContact.php:
    post: 
      tags:
        - Contacts
      summary: Modify an existing contact
      operationId: modifyContact
      parameters:
        - in: body
          name: contact
          required: true
          schema:
            $ref: '#/definitions/ContactModifyRequest'
      responses:
        200:
          description: Updated
          schema:
            $ref: '#/definitions/ContactAddResponse'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Contact not found for this userId
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server/DB error
          schema: 
            $ref: '#/definitions/Error'
  /DeleteContact.php:
    post:
      tags:
        - Contacts
      summary: Delete a contact
      operationId: deleteContact
      parameters:
        - in: body
          name: contact
          required: true
          schema:
            $ref: '#/definitions/DeleteContactRequest'
      responses:
        200:
          description: Deleted
          schema:
            $ref: '#/definitions/DeleteContactRequest'
        400:
          description: Validation error
          schema: 
            $ref: '#/definitions/Error'
        404:
          description:
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Server/DB error
          schema:
            $ref: '#/definitions/Error'

definitions:
  Error:
    type: object
    required:
    - error
    properties:
      error:
        type: string
        example: "Invalid credentials"
  Login:
    type: object
    required:
    - login
    - password
    properties:
      login:
        type: string
        example: "fred"
      password:
        type: string
        example: "secret"
  LoginResponse:
    type: object
    required:
    - id
    - firstName
    - lastName
    - error
    properties:
      id:
        type: integer
        example: 12
      firstName:
        type: string
        example: "John"
      lastName:
        type: string
        example: 'Snow'
      error:
        type: string
        example: ""
  Search:
    type: object
    required:
    - userId
    - search
    properties:
      userId:
        type: integer
        example: 1
      search:
        type: string
        example: "mar"
  Create:
    type: object
    required:
    - login
    - password
    - firstName
    - lastName
    properties:
      login:
        type: string
        example: "carl0672"
      password:
        type: string
        example: "secret1212"
      firstName:
        type: string
        example: "santos"
      lastName:
        type: string
        example: "smith"
  UserCreatedResponse:
    type: object
    required:
    - id
    - firstName
    - lastName
    - error
    properties:
      id:
        type: integer
        example: 12
      firstName:
        type: string
        example: "John"
      lastName:
        type: string
        example: "Snow"
      error:
        type: string
        example: ""
  ContactAddRequest:
    type: object
    required:
    - userId
    - firstName
    - lastName
    - email
    - phone
    properties:
      userId:
        type: integer
        example: 12
      firstName:
        type: string
        example: "Maria"
      lastName:
        type: string
        example: "Rodriguez"
      email:
        type: string
        example: "hatwear@gmail.com"
      phone:
        type: string
        example: "234-653-3456"
  ContactAddResponse:
    type: object
    required:
    - id
    - userId
    - firstName
    - lastName
    - email
    - phone
    - error
    properties:
      id:
        type: integer
        example: 101
      userId:
        type: integer
        example: 12
      firstName:
        type: string
        example: "John"
      lastName:
        type: string
        example: "Snow"
      email:
        type: string
        example: "andy0101@gmail.com"
      phone:
        type: string
        example: "435-321-5356"
      error:
        type: string
        example: ""
  SearchResponse:
    type: object
    required:
    - results
    - error
    properties:
      results:
        type: array
        items: { $ref: '#/definitions/Contact' }
      error:
        type: string
        example: ""
  Contact:
    type: object
    required:
    - id
    - firstName
    - lastName
    - email
    - phone
    properties:
      id:
        type: integer
        example: 101
      userId:
        type: integer
        example: 12
      firstName:
        type: string
        example: "John"
      lastName:
        type: string
        example: "Snow"
      email:
        type: string
        example: "maria13@gmail.com"
      phone:
        type: string
        example: "555-123-4567"
  ContactModifyRequest:
    type: object
    required:
    - id
    - userId
    - firstName
    - lastName
    - email
    - phone
    properties:
      id:
        type: integer
        example: 101
      userId:
        type: integer
        example: 1
      firstName:
        type: string
        example: "maria"
      lastName:
        type: string
        example: "smith"
      email:
        type: string
        example: "hanstable@gmail.com"
      phone:
        type: string
        example: "555-555-5555"
  DeleteContactRequest:
    type: object
    required:
    - id
    - userId
    properties:
      id:
        type: integer
        example: 101
      userId:
        type: integer
        example: 1
  DeleteContactResponse:
    type: object
    required:
    - id
    - userId
    - error
    properties:
      id:
        type: integer
        example: 101
      userId:
        type: integer
        example: 1
      error:
        type: string
        example: ""
