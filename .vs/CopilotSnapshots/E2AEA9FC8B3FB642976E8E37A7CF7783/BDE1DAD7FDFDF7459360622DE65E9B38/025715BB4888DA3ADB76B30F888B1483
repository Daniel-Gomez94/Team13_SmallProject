<?php
// CORS
header("Access-Control-Allow-Origin: http://137.184.185.65");
header("Access-Control-Allow-Headers: Content-Type");
header("Access-Control-Allow-Methods: POST, GET, OPTIONS"); // keeping POST for consistency

// Preflight
if ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') { http_response_code(204); exit; }

// Helpers
function sendJson($obj, $status = 200) {
  http_response_code($status);
  header('Content-Type: application/json; charset=utf-8');
  echo json_encode($obj);
  exit;
}
function getJsonBody() {
  $raw = file_get_contents('php://input');
  $data = json_decode($raw, true);
  if ($data === null && json_last_error() !== JSON_ERROR_NONE) {
    sendJson(['error' => 'Invalid JSON body'], 400);
  }
  return $data ?: [];
}


$in     = getJsonBody();
$id     = $in['id']     ?? null;   // contact ID to delete
$userId = $in['userId'] ?? null;   // owner user ID

if (!is_numeric($id) || !is_numeric($userId)) {
  sendJson(['error' => 'id and userId are required (integers)'], 400);
}

$conn = new mysqli("localhost", "TheBeast", "WeLoveCOP4331", "Smallproject");
if ($conn->connect_error) { sendJson(['error' => 'DB connection failed'], 500); }

$chk = $conn->prepare("SELECT ID FROM Contacts WHERE ID = ? AND UserID = ? LIMIT 1");
if (!$chk) { $conn->close(); sendJson(['error' => 'Prepare failed'], 500); }
$chk->bind_param("ii", $id, $userId);
$chk->execute();
$exists = $chk->get_result()->fetch_assoc();
$chk->close();
if (!$exists) {
  $conn->close();
  sendJson(['error' => 'Contact not found for this userId'], 404);
}

// Delete section
$del = $conn->prepare("DELETE FROM Contacts WHERE ID = ? AND UserID = ?");
if (!$del) { $conn->close(); sendJson(['error' => 'Prepare failed'], 500); }
$del->bind_param("ii", $id, $userId);
if (!$del->execute()) {
  $err = $del->error; $del->close(); $conn->close();
  sendJson(['error' => "Delete failed: $err"], 500);
}
$affected = $del->affected_rows;
$del->close();
$conn->close();

if ($affected !== 1) {
  // Shouldn't happen after we verified, but just in case
  sendJson(['error' => 'Contact not deleted'], 500);
}

// Return a simple confirmation payload
sendJson(['id' => (int)$id, 'userId' => (int)$userId, 'error' => ''], 200);
